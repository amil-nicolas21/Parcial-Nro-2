name: Testing

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      issue_key: ${{ steps.extract_jira.outputs.issue_key }}

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - run: npm ci
      - run: npm run build --if-present


      - name: Run Tests
        id: test_step
        run: |
            set +e
            npm run test:coverage
            TEST_EXIT_CODE=$?
            echo "test_result=$TEST_EXIT_CODE" >> $GITHUB_OUTPUT
            exit $TEST_EXIT_CODE

      - name: SonarCloud Scans
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Check SonarCloud Quality Gate
        id: quality_gate
        run: |
          sleep 10
          ANALYSIS_STATUS=$(curl -s -u ${{ secrets.SONAR_TOKEN }}: "https://sonarcloud.io/api/qualitygates/project_status?projectKey=amil-nicolas21_Parcial-Nro-2" | jq -r .projectStatus.status)
          echo "Quality Gate status: $ANALYSIS_STATUS"
          echo "quality_gate_status=$ANALYSIS_STATUS" >> $GITHUB_OUTPUT

          if [ "$ANALYSIS_STATUS" != "OK" ]; then
            echo "❌ SonarCloud Quality Gate failed!"
            exit 1
          fi
      

      - name: Notify Test in Slacks
        if: always()
        run: |
                COMMIT_MESSAGE=$(git log -1 --pretty=%B)
                TEST_RESULT=${{ steps.test_step.outputs.test_result }}
                QUALITY_GATE_STATUS=${{ steps.quality_gate.outputs.quality_gate_status }}
          
                if [ "$TEST_RESULT" -eq 0 ] && [ "$QUALITY_GATE_STATUS" = "OK" ]; then
                  COLOR="#2eb886"
                  STATUS="✅ Tests Passed"
                else
                  COLOR="#e01e5a"
                  STATUS="❌ Tests Failed"
                fi
                
                curl -X POST -H 'Content-type: application/json' --data "{
                  \"attachments\": [{
                    \"color\": \"$COLOR\",
                    \"text\": \"$STATUS on branch *${{ github.ref_name }}*\nCommit message: *$COMMIT_MESSAGE*\n<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|View commit>\"
                  }]
                }" ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Extract Jira issue key from commit message
        id: extract_jira
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MESSAGE"
          
          ISSUE_KEY=$(echo "$COMMIT_MESSAGE" | grep -oE '[A-Z]+-[0-9]+' | head -n 1)
          echo "Extracted ISSUE_KEY: $ISSUE_KEY"
          
          echo "issue_key=$ISSUE_KEY" >> $GITHUB_OUTPUT

      - name: Move Jira task to "In progress"
        run: |
          ISSUE_KEY="${{ steps.extract_jira.outputs.issue_key }}"
          echo "Transitioning Jira issue: $ISSUE_KEY"

          JSON_PAYLOAD=$(jq -n --arg id "21" '{transition: {id: $id}}')

          curl --request POST \
            --url "${{ secrets.JIRA_URL }}/rest/api/3/issue/$ISSUE_KEY/transitions" \
            --user "${{ secrets.JIRA_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
            --header "Accept: application/json" \
            --header "Content-Type: application/json" \
            --data "$JSON_PAYLOAD"
      

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Trigger Render Deploy Hook
        run: |
          curl -X POST https://api.render.com/deploy/srv-d113hjqli9vc738bsmf0?key=dTKMpUYYkPY

      - name: Verificar estado del despliegue en Render (esperando actualización)
        id: check_render
        run: |
          for i in {1..10}; do  
          DEPLOY_STATUS=$(curl -s -X GET -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
           https://api.render.com/v1/services/srv-d120e4s9c44c73fq0ftg/deploys | jq -r '.deploys[0].status')
          
          echo "Intento $i - Estado del despliegue: $DEPLOY_STATUS"
          
          if [ "$DEPLOY_STATUS" == "live" ] || [ "$DEPLOY_STATUS" == "update_failed" ]; then
           echo "status=$DEPLOY_STATUS" >> $GITHUB_OUTPUT
           exit 0
          fi
          
          sleep 30
          done
  
          # Si no se detectó un estado final
          echo "status=$DEPLOY_STATUS" >>$GITHUB_OUTPUT

      - name: Move Jira task to "Done"
        run: |
          ISSUE_KEY="${{ needs.build.outputs.issue_key }}"
          echo "Transitioning Jira issue: $ISSUE_KEY"

          JSON_PAYLOAD=$(jq -n --arg id "${{ secrets.JIRA_DONE_ID }}" '{transition: {id: $id}}')

          curl --request POST \
            --url "${{ secrets.JIRA_URL }}/rest/api/3/issue/$ISSUE_KEY/transitions" \
            --user "${{ secrets.JIRA_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
            --header "Accept: application/json" \
            --header "Content-Type: application/json" \
            --data "$JSON_PAYLOAD"

